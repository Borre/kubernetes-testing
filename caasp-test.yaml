# Service creation for load balancing
apiVersion: v1
kind: Service
metadata:
  name: test-kubernetes
  labels:
    app: test-kubernetes
spec:
  ports:
    - port: 80
  selector:
    app: test-kubernetes
    tier: test-kubernetes
  type: LoadBalancer
---
# Deployment creation of the application
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: test-kubernetes
  labels:
    app: test-kubernetes
spec:
  selector:
    matchLabels:
      app: test-kubernetes
      tier: test-kubernetes
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: test-kubernetes
        tier: test-kubernetes
    spec:
      containers:
      - image: test-kubernetes
        name: test-kubernetes
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: "0.5"
            memory: "15Mi"
          requests:
            cpu: "0.01"
            memory: "10Mi"
        ports:
        - containerPort: 80
---
# Exposing redis server
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  ports:
  - name: redis
    port: 6379
  clusterIP: None
  selector:
    app: redis
---
# Deployment creation of redis
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      tier: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
        tier: redis
    spec:
      containers:
      - image: redis
        name: redis
        imagePullPolicy: IfNotPresent
        env:
        ports:
        - containerPort: 6379
---
# Definition of the autoscaling policy 
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: test-kubernetes
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: test-kubernetes
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50